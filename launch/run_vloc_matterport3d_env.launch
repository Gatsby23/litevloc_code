<launch>

	<!-- Base Parameters -->
	<arg name="env_id" default="17DRP5sb8fy" />
	<arg name="map_path" default="/Rocket_ssd/dataset/data_topo_loc/matterport3d/out_$(arg env_id)/out_map/" />
	<param name="use_sim_time" value="true" />

	<!-- Launch Environment -->
	<arg name="environment_proj_directory" default="$(find benchmark_visual_nav)"/>
  <arg name="environment_directory" default="$(find benchmark_visual_nav)/data/matterport/$(arg env_id)"/>
	<arg name="useLocalPlanner" default="false" />
	<include file="$(arg environment_proj_directory)/environment/launch/matterport/system_$(arg env_id).launch" >
		<arg name="project_directory" value="$(arg environment_proj_directory)" />
		<arg name="environment_directory" value="$(arg environment_directory)" />
		<arg name="gazebo_gui" value="false" />
		<group if="$(arg useLocalPlanner)">
			<arg name="odomTopic" value="/state_estimation" />
		</group>
		<group unless="$(arg useLocalPlanner)">
			<arg name="odomTopic" value="/vloc/state_estimation" />
		</group>
		<arg name="useLocalPlanner" value="$(arg useLocalPlanner)" />
	</include>

  <!-- Navigation Interface -->
	<!-- Transform the frame_id of localization odometry to robot -->
	<!-- Publish: /vloc/state_estimation, /vloc/state_estimation_path -->
  <node pkg="navigation_interface" type="vis_navigation_interface" name="vis_navigation_interface" output="screen">
		<remap from="/Odometry" to="/pose_fusion/odometry" />
    <param name="loc_world_frame_id" value="vloc_map" />
    <param name="loc_sensor_frame_id" value="habitat_camera" />
    <param name="world_frame_id" value="vloc_map" />
    <param name="sensor_frame_id" value="habitat_camera" />
    <param name="base_frame_id" value="vehicle" /> <!-- robot_id -->
  </node>

	<!-- Localization -->
	<node name="ros_loc_pipeline" pkg="topo_loc" type="ros_loc_pipeline.py" output="screen"
		args="--dataset_path $(arg map_path)
					--device=cuda --vpr_method cosplace --vpr_backbone=ResNet18 --vpr_descriptors_dimension=512 
					--img_matcher master --pose_solver pnp 
					--config_pose_solver $(find topo_loc)/python/config/dataset/matterport3d.yaml --viz
					--ros_rgb_img_type raw" >
		<remap from="/color/image" to="/habitat_camera/color/image" />
		<remap from="/depth/image" to="/habitat_camera/depth/image" />
		<remap from="/color/camera_info" to="/habitat_camera/color/camera_info" />
		<param name="frame_id_map" value="vloc_map" />
	</node>

	<node name="depth_registration" pkg="topo_loc" type="depth_registration.py" output="screen">
		<remap from="/depth/image" to="/habitat_camera/depth/image" />
		<remap from="/depth/camera_info" to="/habitat_camera/depth/camera_info" />
		<param name="frame_id_map" value="vloc_map" />
		<param name="min_depth" value="0.001" />
		<param name="max_depth" value="10.0" />
	</node>

	<node name="ros_pose_fusion" pkg="topo_loc" type="ros_pose_fusion.py" output="screen">
		<remap from="/local/odometry" to="/depth_reg/odometry" />
		<remap from="/global/odometry" to="/vloc/odometry" />
		<param name="frame_id_map" value="vloc_map" />
	</node>

  <!-- Static TF -->
  <!-- Option 1: x y z yaw pitch roll (radians) frame_id child_frame_id period_in_ms -->
  <!-- Option 2: x y z qx qy qz qw frame_id child_frame_id period_in_ms -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="vloc_trans_publisher" args="0 0 0 0 0 0 map vloc_map 10" /> -->

</launch>
